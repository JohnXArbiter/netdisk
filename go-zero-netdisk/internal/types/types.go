// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	Password string `json:"password"`
}

type RegisterReq struct {
}

type CheckFileReq struct {
	FolderId int64  `json:"folderId"`
	Hash     string `json:"hash"`
	Size     int64  `json:"size"`
	Name     string `json:"name"`
	Ext      string `json:"ext"`
}

type UploadReq struct {
	FileNetdiskId int64 `json:"fileNetdiskId"`
}

type CheckChunkReq struct {
	Hash     string `json:"hash"`
	ChunkSeq int64  `json:"chunkSeq"`
}

type UploadChunkReq struct {
	FileId int64 `json:"fileId"`
}

type CheckFileResp struct {
	FileNetdiskId int64 `json:"fileNetdiskId"`
	Status        int8  `json:"status"` // 0：文件未上传，1：文件已存在
}

type ListFileReq struct {
	FolderId int64 `path:"folderId"`
}

type UpdateFileReq struct {
	FileNetdiskId int64  `json:"fileNetdiskId"`
	Name          string `json:"name"`
}

type ListFileFolderReq struct {
	ParentFolderId int64 `path:"parentFolderId"`
}

type CreateFolderReq struct {
	Name           string `json:"name"`
	ParentFolderId int64  `json:"parentFolderId"`
}

type UpdateFolderReq struct {
	FolderId int64  `json:"folderId"`
	Name     string `json:"name"`
}

type MoveReq struct {
	ParentFolderId int64   `json:"parentFolderId"`
	FolderIds      []int64 `json:"folderIds"`
	FileNetdiskIds []int64 `json:"fileNetdiskIds"`
}

type ListFileFolderResp struct {
	Folders      []*listFoldersStruct `json:"folders"`
	FileNetdisks []*listFileStruct    `json:"fileNetdisks"`
}

type ListFoldersStruct struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type ListFileStruct struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Url    string `json:"url"`
	Status int8   `json:"status"`
}

type CheckSizeReq struct {
	FileNetdiskId int64 `json:"fileId"`
}

type DownloadReq struct {
	FileNetdiskId int64 `json:"fileId"`
}

type ChunkDownloadReq struct {
	FileId   int64 `json:"fileId"`
	ChunkSeq int64 `json:"chunkSeq"`
}

type CheckSizeResp struct {
	IsBig    int8  `json:"status"`
	ChunkNum int64 `json:"chunkNum"`
}

type UpdateUserDetailReq struct {
}

type GetUserDetailReq struct {
	UserId int64 `path:"userId"`
}

type UpdateAvatarReq struct {
}
