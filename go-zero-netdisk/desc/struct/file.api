syntax = "v1"

type (
    listFileReq {
        folderId int64 `path:"folderId"`
    }

    updateFileReq {
        fileId int64 `json:"fileId"`
        name string `json:"name"`
    }

    deleteBatchReq {
        folderIds []int64 `json:"folderIds"`
        fileIds []int64 `json:"fileIds"`
    }

    deleteBatchTrulyReq {
        folderIds []int64 `json:"folderIds"`
        fileIds []int64 `json:"fileIds"`
    }

    listFileFolderReq {
        parentFolderId int64 `path:"parentFolderId"`
    }

    createFolderReq {
        name string `json:"name"`
        parentFolderId int64 `json:"parentFolderId"`
    }

    updateFolderReq {
        folderId int64 `json:"folderId"`
        name string `json:"name"`
    }

    moveReq {
        parentFolderId int64 `json:"parentFolderId"`
        folderIds []int64 `json:"folderIds"`
        fileIds []int64 `json:"fileIds"`
    }
)

type (
    deleteBatchResp {
        folderIds []int64 `json:"folderIds"`
        fileIds []int64 `json:"fileIds"`
    }

    listDeletedItemsResp {
        folders []*ListDeletedFolderStruct `json:"folders"`
        files []*ListDeletedFileStruct `json:"files"`
    }

    deleteBatchTrulyResp {
        folderIds []int64 `json:"folderIds"`
        fileIds []int64 `json:"fileIds"`
    }

    listFileFolderResp {
        folders []*ListFolderStruct `json:"folders"`
        files []*ListFileStruct `json:"files"`
    }
)

type (
    ListFolderStruct {
        id int64 `json:"id"`
        name string `json:"name"`
    }

    ListFileStruct {
        id int64 `json:"id"`
        name string `json:"name"`
        url string `json:"url"`
        status int8 `json:"status"`
    }

    ListDeletedFolderStruct {
        id int64 `json:"id"`
        name string `json:"name"`
        DelTime int64 `json:"delTime"`
    }

    ListDeletedFileStruct {
        id int64 `json:"id"`
        name string `json:"name"`
        url string `json:"url"`
        DelTime int64 `json:"delTime"`
    }
)