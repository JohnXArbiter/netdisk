syntax = "v1"

type (
    listFileReq {
        folderId int64 `path:"folderId"`
    }

    updateFileReq {
        fileId int64 `json:"fileId"`
        name string `json:"name"`
    }

    deleteBatchReq {
        FolderIdsStruct
        FileIdsStruct
    }

    recoverReq {
        FolderIdsStruct
        FileIdsStruct
    }

    deleteBatchTrulyReq {
        FolderIdsStruct
        FileIdsStruct
    }

    parentFolderIdReq {
        parentFolderId int64 `path:"parentFolderId"`
    }

    createFolderReq {
        name string `json:"name"`
        parentFolderId int64 `json:"parentFolderId"`
    }

    updateFolderReq {
        folderId int64 `json:"folderId"`
        name string `json:"name"`
    }

    moveFilesReq {
        parentFolderId int64 `json:"parentFolderId"`
        FileIdsStruct
    }

    moveFoldersReq {
        parentFolderId int64 `json:"parentFolderId"`
        FolderIdsStruct
    }
)

type (
    listDeletedItemsResp {
        folders []*ListDeletedFolderStruct `json:"folders"`
        files []*ListDeletedFileStruct `json:"files"`
    }

    listFileFolderResp {
        folders []*ListFolderStruct `json:"folders"`
        files []*ListFileStruct `json:"files"`
    }
)

type (
    ListFolderStruct {
        Id int64 `json:"id"`
        Name string `json:"name"`
        Updated string `json:"updated,omitempty"`
    }

    ListFileStruct {
        Id int64 `json:"id"`
        Name string `json:"name"`
        Url string `json:"url"`
        Status int8 `json:"status"`
        Size int64 `json:"size"`
        Updated string `json:"updated"`
    }

    ListDeletedFolderStruct {
        Id int64 `json:"id"`
        Name string `json:"name"`
        DelTime int64 `json:"delTime"`
    }

    ListDeletedFileStruct {
        Id int64 `json:"id"`
        Name string `json:"name"`
        Url string `json:"url"`
        DelTime int64 `json:"delTime"`
    }

    FolderIdsStruct {
        folderIds []int64 `json:"folderIds"`
    }

    FileIdsStruct {
        fileIds []int64 `json:"fileIds"`
    }
)