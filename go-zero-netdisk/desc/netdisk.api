import (
	"struct/upload.api"
	"struct/file.api"
	"struct/download.api"
	"struct/user.api"
)

service netdisk-api {
	@handler login
	post /login (loginReq) returns (LoginResp)

	@handler register
	post /register (registerReq) returns ()

	@handler ping
	get /ping () returns ()

	@handler test
	get /test () returns ()
}

@server(
	group: upload
	prefix: /upload
	middleware: Auth
)
service netdisk-api {
	// 检查该用户文件是否已存在（秒传）
	@handler checkFile
	post /check (checkFileReq) returns (CheckFileResp)

	// 上传小文件
	@handler upload
	post / (uploadReq) returns ()

	// 检查分片
	@handler checkChunk
	post /chunk-check (CheckChunkReq) returns (CheckChunkResp)

	@handler uploadChunk
	post /chunk (UploadChunkReq) returns ()
}

@server(
	group: download
	prefix: /download
	middleware: Auth
)
service netdisk-api {
	// 检查大小
	@handler checkSize
	post /check_size (checkSizeReq) returns (checkSizeResp)

	// 下载小文件
	@handler download
	post / (downloadReq) returns ()

	// 下载分片
	@handler chunkDownload
	post /chunk (chunkDownloadReq) returns ()
}

@server(
	group: user
	prefix: /user
	middleware: Auth
)
service netdisk-api {
	@handler updateDetail
	post /detail (updateUserDetailReq) returns ()

	@handler getDetail
	get /detail/:id (IdPathReq) returns ()

	@handler updateAvatar
	post /avatar (updateAvatarReq) returns ()
}

@server(
	group: file
	prefix: /file
	middleware: Auth
)
service netdisk-api {
	@handler getFileDetail
	get /:id (IdPathReq) returns (FileResp)

	@handler listFile
	get /list/:parentFolderId (parentFolderIdReq) returns ([]*FileResp)

	@handler listFileByType
	get /type/:fileType (FileTypeReq) returns ([]*FileResp)

	@handler listFolder
	get /folder-list/:parentFolderId (parentFolderIdReq) returns ([]*ListFolderStruct)

	@handler listFileMovableFolder
	get /move/:parentFolderId (parentFolderIdReq) returns ([]ListFolderStruct)

	@handler listFolderMovableFolder
	post /folder-move (ListFolderMovableFolderReq) returns ([]ListFolderStruct)

	@handler moveFiles
	put /move (moveFilesReq) returns ()

	@handler moveFolders
	put /folder-move (moveFoldersReq) returns ()

	@handler updateFile
	put / (UpdateNameReq) returns ()

	@handler updateFolder
	put /folder (UpdateNameReq) returns ()

	@handler copyFiles
	post /copy (CopyFilesReq) returns ()

	@handler deleteFiles
	put /delete (IdsReq) returns ()

	@handler deleteFilesTruly
	post /delete (IdsReq) returns ()

	@handler deleteFolders
	put /folder-delete (IdsReq) returns ()

	@handler deleteFoldersTruly
	post /folder-delete (IdsReq) returns ()

	@handler recoverFiles
	put /recover (FileIdsStruct) returns ()

	@handler recoverFolders
	put /folder-recover (FolderIdsStruct) returns ()

	@handler createFolder
	post /folder (createFolderReq) returns ()

	@handler listDeletedItems
	get /delete () returns (listDeletedItemsResp)
}

type (
	IdPathReq {
		Id int64 `path:"id"`
	}

	loginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	registerReq {
		Username       string `json:"username"`
		Password       string `json:"password"`
		PasswordRepeat string `json:"passwordRepeat"`
	}
)

type (
	LoginResp {
		Token    string   `json:"token"`
		UserInfo UserInfo `json:"userInfo"`
	}

	UserInfo {
		UserId    int64  `json:"userId"`
		Name      string `json:"name"`
		Avatar    string `json:"avatar"`
		Email     string `json:"email"`
		Signature string `json:"signature"`
		Status    int8   `json:"status"`
	}
)