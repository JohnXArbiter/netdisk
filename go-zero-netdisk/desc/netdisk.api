import (
	"struct/upload.api"
	"struct/file.api"
	"struct/download.api"
	"struct/user.api"
)

service netdisk-api {
	@handler login
	post /login (loginReq) returns (LoginResp)
	
	@handler register
	post /register (registerReq) returns ()
	
	@handler ping
	get /ping () returns ()
}

@server(
	group: upload
	prefix: /file/upload
	middleware: Auth
)
service netdisk-api {
	// 检查该用户文件是否已存在（秒传）
	@handler checkFile
	post /check_file (checkFileReq) returns (checkFileResp)
	
	// 上传小文件
	@handler upload
	post / (uploadReq) returns ()
	
	// 检查分片
	@handler checkChunk
	post /check_chunk (checkChunkReq) returns ()
	
	@handler uploadChunk
	post /chunk (uploadChunkReq) returns ()
}

@server(
	group: download
	prefix: /file/download
	middleware: Auth
)
service netdisk-api {
	// 检查大小
	@handler checkSize
	post /check_size (checkSizeReq) returns (checkSizeResp)
	
	// 下载小文件
	@handler download
	post / (downloadReq) returns ()
	
	// 下载分片
	@handler chunkDownload
	post /chunk (chunkDownloadReq) returns ()
}

@server(
	group: user
	prefix: /user
	middleware: Auth
)
service netdisk-api {
	@handler updateDetail
	post /detail (updateUserDetailReq) returns ()
	
	@handler getDetail
	get /detail (getUserDetailReq) returns ()
	
	@handler updateAvatar
	post /avatar (updateAvatarReq) returns ()
}

@server(
	group: file
	prefix: /file
	middleware: Auth
)
service netdisk-api {
	@handler listFile
	get /list (listFileReq) returns ()
	
	@handler listFileMovableFolder
	get /move/:parentFolderId (parentFolderIdReq) returns ([]ListFolderStruct)
	
	@handler moveFiles
	put /move (moveFilesReq) returns ()
	
	@handler updateFile
	put / (updateFileReq) returns ()
	
	@handler copyFiles
	post /copy (CopyFilesReq) returns ()
	
	@handler deleteFiles
	delete / () returns ()
	
	@handler deleteFilesTruly
	delete /delete () returns ()
	
	@handler listDeletedItems
	get /delete () returns (listDeletedItemsResp)
	
	@handler recoverFiles
	put /recover (recoverReq) returns ()
	
	@handler listFolder
	get /folder/:parentFolderId (parentFolderIdReq) returns (listFileFolderResp)
	
	@handler listFolderMovableFolder
	get /folder-move/:parentFolderId (listFolderMovableFolderReq) returns ([]ListFolderStruct)
	
	@handler moveFolders
	put /folder-move (moveFoldersReq) returns ()
	
	@handler createFolder
	post /folder (createFolderReq) returns ()
	
	@handler updateFolder
	put /folder (updateFolderReq) returns ()
	
	@handler deleteFolders
	delete /folder () returns ()
	
	@handler deleteFoldersTruly
	delete /folder-delete () returns ()
	
	@handler recoverFolders
	put /folder-recover (recoverReq) returns ()
}

type (
	loginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	registerReq {
		Username       string `json:"username"`
		Password       string `json:"password"`
		PasswordRepeat string `json:"passwordRepeat"`
	}
)

type (
	LoginResp {
		Token    string   `json:"token"`
		UserInfo UserInfo `json:"userInfo"`
	}

	UserInfo {
		UserId    int64  `json:"userId"`
		Name      string `json:"name"`
		Avatar    string `json:"avatar"`
		Email     string `json:"email"`
		Signature string `json:"signature"`
		Status    int8   `json:"status"`
	}
)